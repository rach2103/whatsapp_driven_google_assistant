version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: whatsapp-drive-assistant
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - DB_TYPE=${DB_TYPE}
      - WEBHOOK_URL=http://${N8N_HOST}:${N8N_PORT}
      - GENERIC_TIMEZONE=UTC
      - N8N_LOG_LEVEL=${LOG_LEVEL}
      - N8N_METRICS=true
      - N8N_DIAGNOSTICS_ENABLED=false
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_MODE=regular
      - N8N_SECURE_COOKIE=false
      - N8N_DISABLE_UI=false
    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflow:/home/node/workflows:ro
      - ./scripts:/home/node/scripts:ro
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL for production
  postgres:
    image: postgres:15-alpine
    container_name: whatsapp-drive-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n_password
      - POSTGRES_NON_ROOT_USER=n8n
      - POSTGRES_NON_ROOT_PASSWORD=n8n_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n-network
    profiles:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: whatsapp-drive-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - n8n-network
    profiles:
      - redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: whatsapp-drive-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - n8n
    networks:
      - n8n-network
    profiles:
      - production

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  n8n-network:
    driver: bridge

# Development override
# Use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
---
# docker-compose.dev.yml content would go here for development overrides